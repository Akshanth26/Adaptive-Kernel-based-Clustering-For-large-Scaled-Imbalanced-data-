import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from imblearn.over_sampling import SMOTE
from sklearn.preprocessing import StandardScaler

# Load dataset
file_path = r"C:\Users\ragha\OneDrive - Amrita Vishwa Vidyapeetham- Chennai Campus\Desktop\My projects\ML\creditcard.csv"
df = pd.read_csv(file_path)

# Check class distribution
print(df['Class'].value_counts())

# Select features and target variable
X = df.drop(columns=['Class'])  # Features
y = df['Class']  # Target

# Standardize features (important for visualization)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply SMOTE
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X_scaled, y)

# Plot before and after SMOTE
plt.figure(figsize=(12, 6))

# Before SMOTE
plt.subplot(1, 2, 1)
plt.scatter(X_scaled[y == 0][:, 0], X_scaled[y == 0][:, 1], label='Class 0', alpha=0.6, c='blue', s=20)
plt.scatter(X_scaled[y == 1][:, 0], X_scaled[y == 1][:, 1], label='Class 1', alpha=0.6, c='red', s=20)
plt.title("Before SMOTE")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.legend()

# After SMOTE
plt.subplot(1, 2, 2)
plt.scatter(X_resampled[y_resampled == 0][:, 0], X_resampled[y_resampled == 0][:, 1], label='Class 0', alpha=0.6, c='blue', s=20)
plt.scatter(X_resampled[y_resampled == 1][:, 0], X_resampled[y_resampled == 1][:, 1], label='Class 1', alpha=0.6, c='red', s=20)
plt.title("After SMOTE")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.legend()

plt.tight_layout()
plt.show()
